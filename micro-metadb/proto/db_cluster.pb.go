// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.3.0
// source: db_cluster.proto

package db

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DBClusterResponseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DBClusterResponseStatus) Reset() {
	*x = DBClusterResponseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBClusterResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBClusterResponseStatus) ProtoMessage() {}

func (x *DBClusterResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBClusterResponseStatus.ProtoReflect.Descriptor instead.
func (*DBClusterResponseStatus) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *DBClusterResponseStatus) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DBClusterResponseStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DBClusterDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TenantId   int32  `protobuf:"varint,3,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	DbPassword string `protobuf:"bytes,4,opt,name=dbPassword,proto3" json:"dbPassword,omitempty"`
	Version    string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Status     int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	TidbCount  int32  `protobuf:"varint,7,opt,name=tidbCount,proto3" json:"tidbCount,omitempty"`
	TikvCount  int32  `protobuf:"varint,8,opt,name=tikvCount,proto3" json:"tikvCount,omitempty"`
	PdCount    int32  `protobuf:"varint,9,opt,name=pdCount,proto3" json:"pdCount,omitempty"`
}

func (x *DBClusterDTO) Reset() {
	*x = DBClusterDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBClusterDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBClusterDTO) ProtoMessage() {}

func (x *DBClusterDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBClusterDTO.ProtoReflect.Descriptor instead.
func (*DBClusterDTO) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *DBClusterDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DBClusterDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DBClusterDTO) GetTenantId() int32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *DBClusterDTO) GetDbPassword() string {
	if x != nil {
		return x.DbPassword
	}
	return ""
}

func (x *DBClusterDTO) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DBClusterDTO) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBClusterDTO) GetTidbCount() int32 {
	if x != nil {
		return x.TidbCount
	}
	return 0
}

func (x *DBClusterDTO) GetTikvCount() int32 {
	if x != nil {
		return x.TikvCount
	}
	return 0
}

func (x *DBClusterDTO) GetPdCount() int32 {
	if x != nil {
		return x.PdCount
	}
	return 0
}

type DBTiUPConfigDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId  int32  `protobuf:"varint,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	ClusterId int32  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Latest    bool   `protobuf:"varint,4,opt,name=latest,proto3" json:"latest,omitempty"`
	Content   string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *DBTiUPConfigDTO) Reset() {
	*x = DBTiUPConfigDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBTiUPConfigDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBTiUPConfigDTO) ProtoMessage() {}

func (x *DBTiUPConfigDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBTiUPConfigDTO.ProtoReflect.Descriptor instead.
func (*DBTiUPConfigDTO) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *DBTiUPConfigDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DBTiUPConfigDTO) GetTenantId() int32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *DBTiUPConfigDTO) GetClusterId() int32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *DBTiUPConfigDTO) GetLatest() bool {
	if x != nil {
		return x.Latest
	}
	return false
}

func (x *DBTiUPConfigDTO) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DBCreateClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *DBClusterDTO `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *DBCreateClusterRequest) Reset() {
	*x = DBCreateClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCreateClusterRequest) ProtoMessage() {}

func (x *DBCreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCreateClusterRequest.ProtoReflect.Descriptor instead.
func (*DBCreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *DBCreateClusterRequest) GetCluster() *DBClusterDTO {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type DBCreateClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *DBClusterResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Cluster *DBClusterDTO            `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *DBCreateClusterResponse) Reset() {
	*x = DBCreateClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCreateClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCreateClusterResponse) ProtoMessage() {}

func (x *DBCreateClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCreateClusterResponse.ProtoReflect.Descriptor instead.
func (*DBCreateClusterResponse) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *DBCreateClusterResponse) GetStatus() *DBClusterResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBCreateClusterResponse) GetCluster() *DBClusterDTO {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type DBFindClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId int32 `protobuf:"varint,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
}

func (x *DBFindClusterRequest) Reset() {
	*x = DBFindClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBFindClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBFindClusterRequest) ProtoMessage() {}

func (x *DBFindClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBFindClusterRequest.ProtoReflect.Descriptor instead.
func (*DBFindClusterRequest) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *DBFindClusterRequest) GetClusterId() int32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

type DBFindClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *DBClusterResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Cluster *DBClusterDTO            `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Config  *DBTiUPConfigDTO         `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DBFindClusterResponse) Reset() {
	*x = DBFindClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBFindClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBFindClusterResponse) ProtoMessage() {}

func (x *DBFindClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBFindClusterResponse.ProtoReflect.Descriptor instead.
func (*DBFindClusterResponse) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *DBFindClusterResponse) GetStatus() *DBClusterResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBFindClusterResponse) GetCluster() *DBClusterDTO {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *DBFindClusterResponse) GetConfig() *DBTiUPConfigDTO {
	if x != nil {
		return x.Config
	}
	return nil
}

type DBUpdateTiUPConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId     int32  `protobuf:"varint,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ConfigContent string `protobuf:"bytes,2,opt,name=configContent,proto3" json:"configContent,omitempty"`
}

func (x *DBUpdateTiUPConfigRequest) Reset() {
	*x = DBUpdateTiUPConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUpdateTiUPConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUpdateTiUPConfigRequest) ProtoMessage() {}

func (x *DBUpdateTiUPConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUpdateTiUPConfigRequest.ProtoReflect.Descriptor instead.
func (*DBUpdateTiUPConfigRequest) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *DBUpdateTiUPConfigRequest) GetClusterId() int32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *DBUpdateTiUPConfigRequest) GetConfigContent() string {
	if x != nil {
		return x.ConfigContent
	}
	return ""
}

type DBUpdateTiUPConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *DBClusterResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Cluster *DBClusterDTO            `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Config  *DBTiUPConfigDTO         `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DBUpdateTiUPConfigResponse) Reset() {
	*x = DBUpdateTiUPConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUpdateTiUPConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUpdateTiUPConfigResponse) ProtoMessage() {}

func (x *DBUpdateTiUPConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUpdateTiUPConfigResponse.ProtoReflect.Descriptor instead.
func (*DBUpdateTiUPConfigResponse) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *DBUpdateTiUPConfigResponse) GetStatus() *DBClusterResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBUpdateTiUPConfigResponse) GetCluster() *DBClusterDTO {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *DBUpdateTiUPConfigResponse) GetConfig() *DBTiUPConfigDTO {
	if x != nil {
		return x.Config
	}
	return nil
}

type DBListClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *DBListClusterRequest) Reset() {
	*x = DBListClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBListClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBListClusterRequest) ProtoMessage() {}

func (x *DBListClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBListClusterRequest.ProtoReflect.Descriptor instead.
func (*DBListClusterRequest) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *DBListClusterRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DBListClusterRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DBListClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *DBClusterResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Clusters []*DBClusterDTO          `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *DBListClusterResponse) Reset() {
	*x = DBListClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_cluster_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBListClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBListClusterResponse) ProtoMessage() {}

func (x *DBListClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_cluster_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBListClusterResponse.ProtoReflect.Descriptor instead.
func (*DBListClusterResponse) Descriptor() ([]byte, []int) {
	return file_db_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *DBListClusterResponse) GetStatus() *DBClusterResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBListClusterResponse) GetClusters() []*DBClusterDTO {
	if x != nil {
		return x.Clusters
	}
	return nil
}

var File_db_cluster_proto protoreflect.FileDescriptor

var file_db_cluster_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x62, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x47, 0x0a, 0x17, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x0c,
	0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x62, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x62, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x64, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x69, 0x64, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6b, 0x76, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x69, 0x6b, 0x76, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x44, 0x42, 0x54, 0x69, 0x55, 0x50, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x16, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x52, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x74, 0x0a, 0x17, 0x44, 0x42, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x34, 0x0a,
	0x14, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x27, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x52,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x42, 0x54, 0x69, 0x55,
	0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x54, 0x4f, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x5f, 0x0a, 0x19, 0x44, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x55, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x44, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x55, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x44, 0x42, 0x54, 0x69, 0x55, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x54, 0x4f, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x46, 0x0a, 0x14, 0x44, 0x42, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x74, 0x0a, 0x15, 0x44, 0x42, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44,
	0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x54, 0x4f, 0x52, 0x08, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x64, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_db_cluster_proto_rawDescOnce sync.Once
	file_db_cluster_proto_rawDescData = file_db_cluster_proto_rawDesc
)

func file_db_cluster_proto_rawDescGZIP() []byte {
	file_db_cluster_proto_rawDescOnce.Do(func() {
		file_db_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_cluster_proto_rawDescData)
	})
	return file_db_cluster_proto_rawDescData
}

var file_db_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_db_cluster_proto_goTypes = []interface{}{
	(*DBClusterResponseStatus)(nil),    // 0: DBClusterResponseStatus
	(*DBClusterDTO)(nil),               // 1: DBClusterDTO
	(*DBTiUPConfigDTO)(nil),            // 2: DBTiUPConfigDTO
	(*DBCreateClusterRequest)(nil),     // 3: DBCreateClusterRequest
	(*DBCreateClusterResponse)(nil),    // 4: DBCreateClusterResponse
	(*DBFindClusterRequest)(nil),       // 5: DBFindClusterRequest
	(*DBFindClusterResponse)(nil),      // 6: DBFindClusterResponse
	(*DBUpdateTiUPConfigRequest)(nil),  // 7: DBUpdateTiUPConfigRequest
	(*DBUpdateTiUPConfigResponse)(nil), // 8: DBUpdateTiUPConfigResponse
	(*DBListClusterRequest)(nil),       // 9: DBListClusterRequest
	(*DBListClusterResponse)(nil),      // 10: DBListClusterResponse
}
var file_db_cluster_proto_depIdxs = []int32{
	1,  // 0: DBCreateClusterRequest.cluster:type_name -> DBClusterDTO
	0,  // 1: DBCreateClusterResponse.status:type_name -> DBClusterResponseStatus
	1,  // 2: DBCreateClusterResponse.cluster:type_name -> DBClusterDTO
	0,  // 3: DBFindClusterResponse.status:type_name -> DBClusterResponseStatus
	1,  // 4: DBFindClusterResponse.cluster:type_name -> DBClusterDTO
	2,  // 5: DBFindClusterResponse.config:type_name -> DBTiUPConfigDTO
	0,  // 6: DBUpdateTiUPConfigResponse.status:type_name -> DBClusterResponseStatus
	1,  // 7: DBUpdateTiUPConfigResponse.cluster:type_name -> DBClusterDTO
	2,  // 8: DBUpdateTiUPConfigResponse.config:type_name -> DBTiUPConfigDTO
	0,  // 9: DBListClusterResponse.status:type_name -> DBClusterResponseStatus
	1,  // 10: DBListClusterResponse.clusters:type_name -> DBClusterDTO
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_db_cluster_proto_init() }
func file_db_cluster_proto_init() {
	if File_db_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBClusterResponseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBClusterDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBTiUPConfigDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCreateClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCreateClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBFindClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBFindClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUpdateTiUPConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUpdateTiUPConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBListClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_cluster_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBListClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_cluster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_cluster_proto_goTypes,
		DependencyIndexes: file_db_cluster_proto_depIdxs,
		MessageInfos:      file_db_cluster_proto_msgTypes,
	}.Build()
	File_db_cluster_proto = out.File
	file_db_cluster_proto_rawDesc = nil
	file_db_cluster_proto_goTypes = nil
	file_db_cluster_proto_depIdxs = nil
}
