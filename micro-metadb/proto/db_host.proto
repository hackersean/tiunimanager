syntax = "proto3";

option go_package = "./;db";

message DBHostResponseStatus {
    int32 code = 1;
    string message = 2;
}

message DBHostPageDTO {
    int32 page = 1;
    int32 pageSize = 2;
    int32 total = 3;
}

message DBDiskDTO {
    string diskId = 1;
    string name = 2;            // [sda/sdb/nvmep0...]
    int32 capacity = 3;         // Disk size, Unit: GB
    string path = 4;            // Disk mount path: [/data1]
    int32 status = 5;
}

message DBAllocationReq {
    string failureDomain = 1;
    int32 cpuCores = 2;
    int32 memory = 3;
    int32 count = 4;
    string purpose = 5;
}

message DBPreAllocation {
    string failureDomain = 1;
    string hostId = 2;
    string diskId = 3;
    int32 originCores = 4;
    int32 originMem = 5;
    int32 requestCores = 6;
    int32 requestMem = 7;
    string hostName = 8;
    string Ip = 9;
    string userName = 10;
    string passwd = 11;
    string diskName = 12;
    string diskPath = 13;
    int32 diskCap = 14;

}

message DBHostInfoDTO {
    string hostId = 1;
    string hostName = 2;
    string dc = 3;
    string az = 4;
    string rack = 5;
    string ip = 6;
    string userName = 7;
    string passwd = 8;
    int32 status = 9;
    string os = 10;                 // Host os
    string kernel = 11;
    string spec = 12;               // Host Spec ["4C8G/16C32g"]
    int32 cpuCores = 13;            // Host cpu Remains
    int32 memory = 14;              // Host memory Remains, Unit:GB
    string nic = 15;                // Host network type: 1GE or 10GE
    string purpose = 16;            // What Purpose is the host used for? [compute/storage or both]
    int64 createAt = 17;
    repeated DBDiskDTO disks = 18;
}

message DBAllocHostDTO {
    string hostName = 1;
    string ip = 2;
    string component = 3;           // Alloc this host for which compoent? [pd/tidb/tikv]
    int32 cpuCores = 4;
    int32 memory = 5;
    DBDiskDTO disk = 6;
}

message DBFailureDomainResource {
    string failureDomain = 1;
    string purpose = 2;
    string spec = 3;
    int32 count = 4;
}

message DBAddHostRequest {
    DBHostInfoDTO host = 1;
}

message DBAddHostResponse {
    DBHostResponseStatus rs = 1;
    string HostId = 2;
}

message DBAddHostsInBatchRequest {
    repeated DBHostInfoDTO hosts = 1;
}

message DBAddHostsInBatchResponse {
    DBHostResponseStatus rs = 1;
    repeated string HostIds = 2;
}

message DBRemoveHostRequest {
    string hostId = 1;
}

message DBRemoveHostResponse {
    DBHostResponseStatus rs = 1;
}

message DBRemoveHostsInBatchRequest {
    repeated string hostIds = 1;
}

message DBRemoveHostsInBatchResponse {
    DBHostResponseStatus rs = 1;
}

message DBListHostsRequest {
    int32 status = 1;
    string purpose = 2;
    DBHostPageDTO page = 3;
}

message DBListHostsResponse {
    DBHostResponseStatus rs = 1;
    repeated DBHostInfoDTO hostList = 2;
    DBHostPageDTO page = 3;
}

message DBCheckDetailsRequest {
    string hostId = 1;
}

message DBCheckDetailsResponse {
    DBHostResponseStatus rs = 1;
    DBHostInfoDTO details = 2;
}

message DBPreAllocHostsRequest {
    DBAllocationReq req = 1;
}

message DBPreAllocHostsResponse {
    DBHostResponseStatus rs = 1;
    repeated DBPreAllocation results = 2;
}

message DBLockHostsRequest {
    repeated DBPreAllocation req = 1;
}

message DBLockHostsResponse {
    DBHostResponseStatus rs = 1;
}

message DBGetFailureDomainRequest {
    int32 failureDomainType = 1;
}

message DBGetFailureDomainResponse {
    DBHostResponseStatus rs = 1;
    repeated DBFailureDomainResource fdList = 2;
}
