// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: db.proto

package db

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_db_proto protoreflect.FileDescriptor

var file_db_proto_rawDesc = []byte{
	0x0a, 0x08, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x64, 0x62, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x64, 0x62, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x64, 0x62, 0x5f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xbf, 0x06, 0x0a, 0x0d, 0x54,
	0x69, 0x43, 0x50, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x46, 0x69, 0x6e, 0x64, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x44, 0x42, 0x46,
	0x69, 0x6e, 0x64, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x13, 0x2e, 0x44, 0x42, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x44, 0x42, 0x53, 0x61, 0x76, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x09, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x13, 0x2e, 0x44, 0x42, 0x46,
	0x69, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x2e, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x44,
	0x42, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x44, 0x42, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x14, 0x2e, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x44, 0x42, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x44, 0x42, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x44, 0x42, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x44, 0x42, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x48,
	0x6f, 0x73, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x44, 0x42, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x44, 0x42, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x17,
	0x2e, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x15, 0x2e, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x44, 0x42, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x55, 0x50, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x44, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x55, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x44, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x55, 0x50, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x2f, 0x3b, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_db_proto_goTypes = []interface{}{
	(*DBFindTenantRequest)(nil),             // 0: DBFindTenantRequest
	(*DBFindAccountRequest)(nil),            // 1: DBFindAccountRequest
	(*DBSaveTokenRequest)(nil),              // 2: DBSaveTokenRequest
	(*DBFindTokenRequest)(nil),              // 3: DBFindTokenRequest
	(*DBFindRolesByPermissionRequest)(nil),  // 4: DBFindRolesByPermissionRequest
	(*DBAddHostRequest)(nil),                // 5: DBAddHostRequest
	(*DBRemoveHostRequest)(nil),             // 6: DBRemoveHostRequest
	(*DBListHostsRequest)(nil),              // 7: DBListHostsRequest
	(*DBCheckDetailsRequest)(nil),           // 8: DBCheckDetailsRequest
	(*DBAllocHostsRequest)(nil),             // 9: DBAllocHostsRequest
	(*DBCreateClusterRequest)(nil),          // 10: DBCreateClusterRequest
	(*DBFindClusterRequest)(nil),            // 11: DBFindClusterRequest
	(*DBUpdateTiUPConfigRequest)(nil),       // 12: DBUpdateTiUPConfigRequest
	(*DBFindTenantResponse)(nil),            // 13: DBFindTenantResponse
	(*DBFindAccountResponse)(nil),           // 14: DBFindAccountResponse
	(*DBSaveTokenResponse)(nil),             // 15: DBSaveTokenResponse
	(*DBFindTokenResponse)(nil),             // 16: DBFindTokenResponse
	(*DBFindRolesByPermissionResponse)(nil), // 17: DBFindRolesByPermissionResponse
	(*DBAddHostResponse)(nil),               // 18: DBAddHostResponse
	(*DBRemoveHostResponse)(nil),            // 19: DBRemoveHostResponse
	(*DBListHostsResponse)(nil),             // 20: DBListHostsResponse
	(*DBCheckDetailsResponse)(nil),          // 21: DBCheckDetailsResponse
	(*DBAllocHostResponse)(nil),             // 22: DBAllocHostResponse
	(*DBCreateClusterResponse)(nil),         // 23: DBCreateClusterResponse
	(*DBFindClusterResponse)(nil),           // 24: DBFindClusterResponse
	(*DBUpdateTiUPConfigResponse)(nil),      // 25: DBUpdateTiUPConfigResponse
}
var file_db_proto_depIdxs = []int32{
	0,  // 0: TiCPDBService.FindTenant:input_type -> DBFindTenantRequest
	1,  // 1: TiCPDBService.FindAccount:input_type -> DBFindAccountRequest
	2,  // 2: TiCPDBService.SaveToken:input_type -> DBSaveTokenRequest
	3,  // 3: TiCPDBService.FindToken:input_type -> DBFindTokenRequest
	4,  // 4: TiCPDBService.FindRolesByPermission:input_type -> DBFindRolesByPermissionRequest
	5,  // 5: TiCPDBService.AddHost:input_type -> DBAddHostRequest
	6,  // 6: TiCPDBService.RemoveHost:input_type -> DBRemoveHostRequest
	7,  // 7: TiCPDBService.ListHost:input_type -> DBListHostsRequest
	8,  // 8: TiCPDBService.CheckDetails:input_type -> DBCheckDetailsRequest
	9,  // 9: TiCPDBService.AllocHosts:input_type -> DBAllocHostsRequest
	10, // 10: TiCPDBService.AddCluster:input_type -> DBCreateClusterRequest
	11, // 11: TiCPDBService.FindCluster:input_type -> DBFindClusterRequest
	12, // 12: TiCPDBService.UpdateTiUPConfig:input_type -> DBUpdateTiUPConfigRequest
	13, // 13: TiCPDBService.FindTenant:output_type -> DBFindTenantResponse
	14, // 14: TiCPDBService.FindAccount:output_type -> DBFindAccountResponse
	15, // 15: TiCPDBService.SaveToken:output_type -> DBSaveTokenResponse
	16, // 16: TiCPDBService.FindToken:output_type -> DBFindTokenResponse
	17, // 17: TiCPDBService.FindRolesByPermission:output_type -> DBFindRolesByPermissionResponse
	18, // 18: TiCPDBService.AddHost:output_type -> DBAddHostResponse
	19, // 19: TiCPDBService.RemoveHost:output_type -> DBRemoveHostResponse
	20, // 20: TiCPDBService.ListHost:output_type -> DBListHostsResponse
	21, // 21: TiCPDBService.CheckDetails:output_type -> DBCheckDetailsResponse
	22, // 22: TiCPDBService.AllocHosts:output_type -> DBAllocHostResponse
	23, // 23: TiCPDBService.AddCluster:output_type -> DBCreateClusterResponse
	24, // 24: TiCPDBService.FindCluster:output_type -> DBFindClusterResponse
	25, // 25: TiCPDBService.UpdateTiUPConfig:output_type -> DBUpdateTiUPConfigResponse
	13, // [13:26] is the sub-list for method output_type
	0,  // [0:13] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_db_proto_init() }
func file_db_proto_init() {
	if File_db_proto != nil {
		return
	}
	file_db_auth_proto_init()
	file_db_host_proto_init()
	file_db_cluster_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_db_proto_goTypes,
		DependencyIndexes: file_db_proto_depIdxs,
	}.Build()
	File_db_proto = out.File
	file_db_proto_rawDesc = nil
	file_db_proto_goTypes = nil
	file_db_proto_depIdxs = nil
}
